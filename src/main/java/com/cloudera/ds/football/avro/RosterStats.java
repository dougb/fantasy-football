/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cloudera.ds.football.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RosterStats extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RosterStats\",\"namespace\":\"com.cloudera.ds.football.avro\",\"fields\":[{\"name\":\"qb\",\"type\":\"string\"},{\"name\":\"rb1\",\"type\":\"string\"},{\"name\":\"rb2\",\"type\":\"string\"},{\"name\":\"wr1\",\"type\":\"string\"},{\"name\":\"wr2\",\"type\":\"string\"},{\"name\":\"te\",\"type\":\"string\"},{\"name\":\"k\",\"type\":\"string\"},{\"name\":\"flex\",\"type\":\"string\"},{\"name\":\"def\",\"type\":\"string\"},{\"name\":\"meanTotal\",\"type\":\"double\"},{\"name\":\"varianceTotal\",\"type\":\"double\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence qb;
  @Deprecated public java.lang.CharSequence rb1;
  @Deprecated public java.lang.CharSequence rb2;
  @Deprecated public java.lang.CharSequence wr1;
  @Deprecated public java.lang.CharSequence wr2;
  @Deprecated public java.lang.CharSequence te;
  @Deprecated public java.lang.CharSequence k;
  @Deprecated public java.lang.CharSequence flex;
  @Deprecated public java.lang.CharSequence def;
  @Deprecated public double meanTotal;
  @Deprecated public double varianceTotal;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public RosterStats() {}

  /**
   * All-args constructor.
   */
  public RosterStats(java.lang.CharSequence qb, java.lang.CharSequence rb1, java.lang.CharSequence rb2, java.lang.CharSequence wr1, java.lang.CharSequence wr2, java.lang.CharSequence te, java.lang.CharSequence k, java.lang.CharSequence flex, java.lang.CharSequence def, java.lang.Double meanTotal, java.lang.Double varianceTotal) {
    this.qb = qb;
    this.rb1 = rb1;
    this.rb2 = rb2;
    this.wr1 = wr1;
    this.wr2 = wr2;
    this.te = te;
    this.k = k;
    this.flex = flex;
    this.def = def;
    this.meanTotal = meanTotal;
    this.varianceTotal = varianceTotal;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return qb;
    case 1: return rb1;
    case 2: return rb2;
    case 3: return wr1;
    case 4: return wr2;
    case 5: return te;
    case 6: return k;
    case 7: return flex;
    case 8: return def;
    case 9: return meanTotal;
    case 10: return varianceTotal;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: qb = (java.lang.CharSequence)value$; break;
    case 1: rb1 = (java.lang.CharSequence)value$; break;
    case 2: rb2 = (java.lang.CharSequence)value$; break;
    case 3: wr1 = (java.lang.CharSequence)value$; break;
    case 4: wr2 = (java.lang.CharSequence)value$; break;
    case 5: te = (java.lang.CharSequence)value$; break;
    case 6: k = (java.lang.CharSequence)value$; break;
    case 7: flex = (java.lang.CharSequence)value$; break;
    case 8: def = (java.lang.CharSequence)value$; break;
    case 9: meanTotal = (java.lang.Double)value$; break;
    case 10: varianceTotal = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'qb' field.
   */
  public java.lang.CharSequence getQb() {
    return qb;
  }

  /**
   * Sets the value of the 'qb' field.
   * @param value the value to set.
   */
  public void setQb(java.lang.CharSequence value) {
    this.qb = value;
  }

  /**
   * Gets the value of the 'rb1' field.
   */
  public java.lang.CharSequence getRb1() {
    return rb1;
  }

  /**
   * Sets the value of the 'rb1' field.
   * @param value the value to set.
   */
  public void setRb1(java.lang.CharSequence value) {
    this.rb1 = value;
  }

  /**
   * Gets the value of the 'rb2' field.
   */
  public java.lang.CharSequence getRb2() {
    return rb2;
  }

  /**
   * Sets the value of the 'rb2' field.
   * @param value the value to set.
   */
  public void setRb2(java.lang.CharSequence value) {
    this.rb2 = value;
  }

  /**
   * Gets the value of the 'wr1' field.
   */
  public java.lang.CharSequence getWr1() {
    return wr1;
  }

  /**
   * Sets the value of the 'wr1' field.
   * @param value the value to set.
   */
  public void setWr1(java.lang.CharSequence value) {
    this.wr1 = value;
  }

  /**
   * Gets the value of the 'wr2' field.
   */
  public java.lang.CharSequence getWr2() {
    return wr2;
  }

  /**
   * Sets the value of the 'wr2' field.
   * @param value the value to set.
   */
  public void setWr2(java.lang.CharSequence value) {
    this.wr2 = value;
  }

  /**
   * Gets the value of the 'te' field.
   */
  public java.lang.CharSequence getTe() {
    return te;
  }

  /**
   * Sets the value of the 'te' field.
   * @param value the value to set.
   */
  public void setTe(java.lang.CharSequence value) {
    this.te = value;
  }

  /**
   * Gets the value of the 'k' field.
   */
  public java.lang.CharSequence getK() {
    return k;
  }

  /**
   * Sets the value of the 'k' field.
   * @param value the value to set.
   */
  public void setK(java.lang.CharSequence value) {
    this.k = value;
  }

  /**
   * Gets the value of the 'flex' field.
   */
  public java.lang.CharSequence getFlex() {
    return flex;
  }

  /**
   * Sets the value of the 'flex' field.
   * @param value the value to set.
   */
  public void setFlex(java.lang.CharSequence value) {
    this.flex = value;
  }

  /**
   * Gets the value of the 'def' field.
   */
  public java.lang.CharSequence getDef() {
    return def;
  }

  /**
   * Sets the value of the 'def' field.
   * @param value the value to set.
   */
  public void setDef(java.lang.CharSequence value) {
    this.def = value;
  }

  /**
   * Gets the value of the 'meanTotal' field.
   */
  public java.lang.Double getMeanTotal() {
    return meanTotal;
  }

  /**
   * Sets the value of the 'meanTotal' field.
   * @param value the value to set.
   */
  public void setMeanTotal(java.lang.Double value) {
    this.meanTotal = value;
  }

  /**
   * Gets the value of the 'varianceTotal' field.
   */
  public java.lang.Double getVarianceTotal() {
    return varianceTotal;
  }

  /**
   * Sets the value of the 'varianceTotal' field.
   * @param value the value to set.
   */
  public void setVarianceTotal(java.lang.Double value) {
    this.varianceTotal = value;
  }

  /** Creates a new RosterStats RecordBuilder */
  public static com.cloudera.ds.football.avro.RosterStats.Builder newBuilder() {
    return new com.cloudera.ds.football.avro.RosterStats.Builder();
  }
  
  /** Creates a new RosterStats RecordBuilder by copying an existing Builder */
  public static com.cloudera.ds.football.avro.RosterStats.Builder newBuilder(com.cloudera.ds.football.avro.RosterStats.Builder other) {
    return new com.cloudera.ds.football.avro.RosterStats.Builder(other);
  }
  
  /** Creates a new RosterStats RecordBuilder by copying an existing RosterStats instance */
  public static com.cloudera.ds.football.avro.RosterStats.Builder newBuilder(com.cloudera.ds.football.avro.RosterStats other) {
    return new com.cloudera.ds.football.avro.RosterStats.Builder(other);
  }
  
  /**
   * RecordBuilder for RosterStats instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RosterStats>
    implements org.apache.avro.data.RecordBuilder<RosterStats> {

    private java.lang.CharSequence qb;
    private java.lang.CharSequence rb1;
    private java.lang.CharSequence rb2;
    private java.lang.CharSequence wr1;
    private java.lang.CharSequence wr2;
    private java.lang.CharSequence te;
    private java.lang.CharSequence k;
    private java.lang.CharSequence flex;
    private java.lang.CharSequence def;
    private double meanTotal;
    private double varianceTotal;

    /** Creates a new Builder */
    private Builder() {
      super(com.cloudera.ds.football.avro.RosterStats.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.cloudera.ds.football.avro.RosterStats.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.qb)) {
        this.qb = data().deepCopy(fields()[0].schema(), other.qb);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.rb1)) {
        this.rb1 = data().deepCopy(fields()[1].schema(), other.rb1);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.rb2)) {
        this.rb2 = data().deepCopy(fields()[2].schema(), other.rb2);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.wr1)) {
        this.wr1 = data().deepCopy(fields()[3].schema(), other.wr1);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.wr2)) {
        this.wr2 = data().deepCopy(fields()[4].schema(), other.wr2);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.te)) {
        this.te = data().deepCopy(fields()[5].schema(), other.te);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.k)) {
        this.k = data().deepCopy(fields()[6].schema(), other.k);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.flex)) {
        this.flex = data().deepCopy(fields()[7].schema(), other.flex);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.def)) {
        this.def = data().deepCopy(fields()[8].schema(), other.def);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.meanTotal)) {
        this.meanTotal = data().deepCopy(fields()[9].schema(), other.meanTotal);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.varianceTotal)) {
        this.varianceTotal = data().deepCopy(fields()[10].schema(), other.varianceTotal);
        fieldSetFlags()[10] = true;
      }
    }
    
    /** Creates a Builder by copying an existing RosterStats instance */
    private Builder(com.cloudera.ds.football.avro.RosterStats other) {
            super(com.cloudera.ds.football.avro.RosterStats.SCHEMA$);
      if (isValidValue(fields()[0], other.qb)) {
        this.qb = data().deepCopy(fields()[0].schema(), other.qb);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.rb1)) {
        this.rb1 = data().deepCopy(fields()[1].schema(), other.rb1);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.rb2)) {
        this.rb2 = data().deepCopy(fields()[2].schema(), other.rb2);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.wr1)) {
        this.wr1 = data().deepCopy(fields()[3].schema(), other.wr1);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.wr2)) {
        this.wr2 = data().deepCopy(fields()[4].schema(), other.wr2);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.te)) {
        this.te = data().deepCopy(fields()[5].schema(), other.te);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.k)) {
        this.k = data().deepCopy(fields()[6].schema(), other.k);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.flex)) {
        this.flex = data().deepCopy(fields()[7].schema(), other.flex);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.def)) {
        this.def = data().deepCopy(fields()[8].schema(), other.def);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.meanTotal)) {
        this.meanTotal = data().deepCopy(fields()[9].schema(), other.meanTotal);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.varianceTotal)) {
        this.varianceTotal = data().deepCopy(fields()[10].schema(), other.varianceTotal);
        fieldSetFlags()[10] = true;
      }
    }

    /** Gets the value of the 'qb' field */
    public java.lang.CharSequence getQb() {
      return qb;
    }
    
    /** Sets the value of the 'qb' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder setQb(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.qb = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'qb' field has been set */
    public boolean hasQb() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'qb' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder clearQb() {
      qb = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'rb1' field */
    public java.lang.CharSequence getRb1() {
      return rb1;
    }
    
    /** Sets the value of the 'rb1' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder setRb1(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.rb1 = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'rb1' field has been set */
    public boolean hasRb1() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'rb1' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder clearRb1() {
      rb1 = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'rb2' field */
    public java.lang.CharSequence getRb2() {
      return rb2;
    }
    
    /** Sets the value of the 'rb2' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder setRb2(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.rb2 = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'rb2' field has been set */
    public boolean hasRb2() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'rb2' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder clearRb2() {
      rb2 = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'wr1' field */
    public java.lang.CharSequence getWr1() {
      return wr1;
    }
    
    /** Sets the value of the 'wr1' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder setWr1(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.wr1 = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'wr1' field has been set */
    public boolean hasWr1() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'wr1' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder clearWr1() {
      wr1 = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'wr2' field */
    public java.lang.CharSequence getWr2() {
      return wr2;
    }
    
    /** Sets the value of the 'wr2' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder setWr2(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.wr2 = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'wr2' field has been set */
    public boolean hasWr2() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'wr2' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder clearWr2() {
      wr2 = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'te' field */
    public java.lang.CharSequence getTe() {
      return te;
    }
    
    /** Sets the value of the 'te' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder setTe(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.te = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'te' field has been set */
    public boolean hasTe() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'te' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder clearTe() {
      te = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'k' field */
    public java.lang.CharSequence getK() {
      return k;
    }
    
    /** Sets the value of the 'k' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder setK(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.k = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'k' field has been set */
    public boolean hasK() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'k' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder clearK() {
      k = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'flex' field */
    public java.lang.CharSequence getFlex() {
      return flex;
    }
    
    /** Sets the value of the 'flex' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder setFlex(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.flex = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'flex' field has been set */
    public boolean hasFlex() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'flex' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder clearFlex() {
      flex = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'def' field */
    public java.lang.CharSequence getDef() {
      return def;
    }
    
    /** Sets the value of the 'def' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder setDef(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.def = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'def' field has been set */
    public boolean hasDef() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'def' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder clearDef() {
      def = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'meanTotal' field */
    public java.lang.Double getMeanTotal() {
      return meanTotal;
    }
    
    /** Sets the value of the 'meanTotal' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder setMeanTotal(double value) {
      validate(fields()[9], value);
      this.meanTotal = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'meanTotal' field has been set */
    public boolean hasMeanTotal() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'meanTotal' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder clearMeanTotal() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'varianceTotal' field */
    public java.lang.Double getVarianceTotal() {
      return varianceTotal;
    }
    
    /** Sets the value of the 'varianceTotal' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder setVarianceTotal(double value) {
      validate(fields()[10], value);
      this.varianceTotal = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'varianceTotal' field has been set */
    public boolean hasVarianceTotal() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'varianceTotal' field */
    public com.cloudera.ds.football.avro.RosterStats.Builder clearVarianceTotal() {
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    public RosterStats build() {
      try {
        RosterStats record = new RosterStats();
        record.qb = fieldSetFlags()[0] ? this.qb : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.rb1 = fieldSetFlags()[1] ? this.rb1 : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.rb2 = fieldSetFlags()[2] ? this.rb2 : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.wr1 = fieldSetFlags()[3] ? this.wr1 : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.wr2 = fieldSetFlags()[4] ? this.wr2 : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.te = fieldSetFlags()[5] ? this.te : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.k = fieldSetFlags()[6] ? this.k : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.flex = fieldSetFlags()[7] ? this.flex : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.def = fieldSetFlags()[8] ? this.def : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.meanTotal = fieldSetFlags()[9] ? this.meanTotal : (java.lang.Double) defaultValue(fields()[9]);
        record.varianceTotal = fieldSetFlags()[10] ? this.varianceTotal : (java.lang.Double) defaultValue(fields()[10]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
