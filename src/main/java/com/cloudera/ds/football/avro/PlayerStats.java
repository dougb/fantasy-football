/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cloudera.ds.football.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PlayerStats extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PlayerStats\",\"namespace\":\"com.cloudera.ds.football.avro\",\"fields\":[{\"name\":\"year\",\"type\":\"int\"},{\"name\":\"totalGamesPlayed\",\"type\":\"int\"},{\"name\":\"passingStats\",\"type\":{\"type\":\"record\",\"name\":\"StatSummary\",\"fields\":[{\"name\":\"mean\",\"type\":\"float\"},{\"name\":\"variance\",\"type\":\"float\"}]}},{\"name\":\"receivingStats\",\"type\":\"StatSummary\"},{\"name\":\"rushingStats\",\"type\":\"StatSummary\"},{\"name\":\"totalStats\",\"type\":\"StatSummary\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int year;
  @Deprecated public int totalGamesPlayed;
  @Deprecated public com.cloudera.ds.football.avro.StatSummary passingStats;
  @Deprecated public com.cloudera.ds.football.avro.StatSummary receivingStats;
  @Deprecated public com.cloudera.ds.football.avro.StatSummary rushingStats;
  @Deprecated public com.cloudera.ds.football.avro.StatSummary totalStats;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public PlayerStats() {}

  /**
   * All-args constructor.
   */
  public PlayerStats(java.lang.Integer year, java.lang.Integer totalGamesPlayed, com.cloudera.ds.football.avro.StatSummary passingStats, com.cloudera.ds.football.avro.StatSummary receivingStats, com.cloudera.ds.football.avro.StatSummary rushingStats, com.cloudera.ds.football.avro.StatSummary totalStats) {
    this.year = year;
    this.totalGamesPlayed = totalGamesPlayed;
    this.passingStats = passingStats;
    this.receivingStats = receivingStats;
    this.rushingStats = rushingStats;
    this.totalStats = totalStats;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return year;
    case 1: return totalGamesPlayed;
    case 2: return passingStats;
    case 3: return receivingStats;
    case 4: return rushingStats;
    case 5: return totalStats;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: year = (java.lang.Integer)value$; break;
    case 1: totalGamesPlayed = (java.lang.Integer)value$; break;
    case 2: passingStats = (com.cloudera.ds.football.avro.StatSummary)value$; break;
    case 3: receivingStats = (com.cloudera.ds.football.avro.StatSummary)value$; break;
    case 4: rushingStats = (com.cloudera.ds.football.avro.StatSummary)value$; break;
    case 5: totalStats = (com.cloudera.ds.football.avro.StatSummary)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'year' field.
   */
  public java.lang.Integer getYear() {
    return year;
  }

  /**
   * Sets the value of the 'year' field.
   * @param value the value to set.
   */
  public void setYear(java.lang.Integer value) {
    this.year = value;
  }

  /**
   * Gets the value of the 'totalGamesPlayed' field.
   */
  public java.lang.Integer getTotalGamesPlayed() {
    return totalGamesPlayed;
  }

  /**
   * Sets the value of the 'totalGamesPlayed' field.
   * @param value the value to set.
   */
  public void setTotalGamesPlayed(java.lang.Integer value) {
    this.totalGamesPlayed = value;
  }

  /**
   * Gets the value of the 'passingStats' field.
   */
  public com.cloudera.ds.football.avro.StatSummary getPassingStats() {
    return passingStats;
  }

  /**
   * Sets the value of the 'passingStats' field.
   * @param value the value to set.
   */
  public void setPassingStats(com.cloudera.ds.football.avro.StatSummary value) {
    this.passingStats = value;
  }

  /**
   * Gets the value of the 'receivingStats' field.
   */
  public com.cloudera.ds.football.avro.StatSummary getReceivingStats() {
    return receivingStats;
  }

  /**
   * Sets the value of the 'receivingStats' field.
   * @param value the value to set.
   */
  public void setReceivingStats(com.cloudera.ds.football.avro.StatSummary value) {
    this.receivingStats = value;
  }

  /**
   * Gets the value of the 'rushingStats' field.
   */
  public com.cloudera.ds.football.avro.StatSummary getRushingStats() {
    return rushingStats;
  }

  /**
   * Sets the value of the 'rushingStats' field.
   * @param value the value to set.
   */
  public void setRushingStats(com.cloudera.ds.football.avro.StatSummary value) {
    this.rushingStats = value;
  }

  /**
   * Gets the value of the 'totalStats' field.
   */
  public com.cloudera.ds.football.avro.StatSummary getTotalStats() {
    return totalStats;
  }

  /**
   * Sets the value of the 'totalStats' field.
   * @param value the value to set.
   */
  public void setTotalStats(com.cloudera.ds.football.avro.StatSummary value) {
    this.totalStats = value;
  }

  /** Creates a new PlayerStats RecordBuilder */
  public static com.cloudera.ds.football.avro.PlayerStats.Builder newBuilder() {
    return new com.cloudera.ds.football.avro.PlayerStats.Builder();
  }
  
  /** Creates a new PlayerStats RecordBuilder by copying an existing Builder */
  public static com.cloudera.ds.football.avro.PlayerStats.Builder newBuilder(com.cloudera.ds.football.avro.PlayerStats.Builder other) {
    return new com.cloudera.ds.football.avro.PlayerStats.Builder(other);
  }
  
  /** Creates a new PlayerStats RecordBuilder by copying an existing PlayerStats instance */
  public static com.cloudera.ds.football.avro.PlayerStats.Builder newBuilder(com.cloudera.ds.football.avro.PlayerStats other) {
    return new com.cloudera.ds.football.avro.PlayerStats.Builder(other);
  }
  
  /**
   * RecordBuilder for PlayerStats instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PlayerStats>
    implements org.apache.avro.data.RecordBuilder<PlayerStats> {

    private int year;
    private int totalGamesPlayed;
    private com.cloudera.ds.football.avro.StatSummary passingStats;
    private com.cloudera.ds.football.avro.StatSummary receivingStats;
    private com.cloudera.ds.football.avro.StatSummary rushingStats;
    private com.cloudera.ds.football.avro.StatSummary totalStats;

    /** Creates a new Builder */
    private Builder() {
      super(com.cloudera.ds.football.avro.PlayerStats.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.cloudera.ds.football.avro.PlayerStats.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.year)) {
        this.year = data().deepCopy(fields()[0].schema(), other.year);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.totalGamesPlayed)) {
        this.totalGamesPlayed = data().deepCopy(fields()[1].schema(), other.totalGamesPlayed);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.passingStats)) {
        this.passingStats = data().deepCopy(fields()[2].schema(), other.passingStats);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.receivingStats)) {
        this.receivingStats = data().deepCopy(fields()[3].schema(), other.receivingStats);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.rushingStats)) {
        this.rushingStats = data().deepCopy(fields()[4].schema(), other.rushingStats);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.totalStats)) {
        this.totalStats = data().deepCopy(fields()[5].schema(), other.totalStats);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing PlayerStats instance */
    private Builder(com.cloudera.ds.football.avro.PlayerStats other) {
            super(com.cloudera.ds.football.avro.PlayerStats.SCHEMA$);
      if (isValidValue(fields()[0], other.year)) {
        this.year = data().deepCopy(fields()[0].schema(), other.year);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.totalGamesPlayed)) {
        this.totalGamesPlayed = data().deepCopy(fields()[1].schema(), other.totalGamesPlayed);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.passingStats)) {
        this.passingStats = data().deepCopy(fields()[2].schema(), other.passingStats);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.receivingStats)) {
        this.receivingStats = data().deepCopy(fields()[3].schema(), other.receivingStats);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.rushingStats)) {
        this.rushingStats = data().deepCopy(fields()[4].schema(), other.rushingStats);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.totalStats)) {
        this.totalStats = data().deepCopy(fields()[5].schema(), other.totalStats);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'year' field */
    public java.lang.Integer getYear() {
      return year;
    }
    
    /** Sets the value of the 'year' field */
    public com.cloudera.ds.football.avro.PlayerStats.Builder setYear(int value) {
      validate(fields()[0], value);
      this.year = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'year' field has been set */
    public boolean hasYear() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'year' field */
    public com.cloudera.ds.football.avro.PlayerStats.Builder clearYear() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'totalGamesPlayed' field */
    public java.lang.Integer getTotalGamesPlayed() {
      return totalGamesPlayed;
    }
    
    /** Sets the value of the 'totalGamesPlayed' field */
    public com.cloudera.ds.football.avro.PlayerStats.Builder setTotalGamesPlayed(int value) {
      validate(fields()[1], value);
      this.totalGamesPlayed = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'totalGamesPlayed' field has been set */
    public boolean hasTotalGamesPlayed() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'totalGamesPlayed' field */
    public com.cloudera.ds.football.avro.PlayerStats.Builder clearTotalGamesPlayed() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'passingStats' field */
    public com.cloudera.ds.football.avro.StatSummary getPassingStats() {
      return passingStats;
    }
    
    /** Sets the value of the 'passingStats' field */
    public com.cloudera.ds.football.avro.PlayerStats.Builder setPassingStats(com.cloudera.ds.football.avro.StatSummary value) {
      validate(fields()[2], value);
      this.passingStats = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'passingStats' field has been set */
    public boolean hasPassingStats() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'passingStats' field */
    public com.cloudera.ds.football.avro.PlayerStats.Builder clearPassingStats() {
      passingStats = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'receivingStats' field */
    public com.cloudera.ds.football.avro.StatSummary getReceivingStats() {
      return receivingStats;
    }
    
    /** Sets the value of the 'receivingStats' field */
    public com.cloudera.ds.football.avro.PlayerStats.Builder setReceivingStats(com.cloudera.ds.football.avro.StatSummary value) {
      validate(fields()[3], value);
      this.receivingStats = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'receivingStats' field has been set */
    public boolean hasReceivingStats() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'receivingStats' field */
    public com.cloudera.ds.football.avro.PlayerStats.Builder clearReceivingStats() {
      receivingStats = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'rushingStats' field */
    public com.cloudera.ds.football.avro.StatSummary getRushingStats() {
      return rushingStats;
    }
    
    /** Sets the value of the 'rushingStats' field */
    public com.cloudera.ds.football.avro.PlayerStats.Builder setRushingStats(com.cloudera.ds.football.avro.StatSummary value) {
      validate(fields()[4], value);
      this.rushingStats = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'rushingStats' field has been set */
    public boolean hasRushingStats() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'rushingStats' field */
    public com.cloudera.ds.football.avro.PlayerStats.Builder clearRushingStats() {
      rushingStats = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'totalStats' field */
    public com.cloudera.ds.football.avro.StatSummary getTotalStats() {
      return totalStats;
    }
    
    /** Sets the value of the 'totalStats' field */
    public com.cloudera.ds.football.avro.PlayerStats.Builder setTotalStats(com.cloudera.ds.football.avro.StatSummary value) {
      validate(fields()[5], value);
      this.totalStats = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'totalStats' field has been set */
    public boolean hasTotalStats() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'totalStats' field */
    public com.cloudera.ds.football.avro.PlayerStats.Builder clearTotalStats() {
      totalStats = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public PlayerStats build() {
      try {
        PlayerStats record = new PlayerStats();
        record.year = fieldSetFlags()[0] ? this.year : (java.lang.Integer) defaultValue(fields()[0]);
        record.totalGamesPlayed = fieldSetFlags()[1] ? this.totalGamesPlayed : (java.lang.Integer) defaultValue(fields()[1]);
        record.passingStats = fieldSetFlags()[2] ? this.passingStats : (com.cloudera.ds.football.avro.StatSummary) defaultValue(fields()[2]);
        record.receivingStats = fieldSetFlags()[3] ? this.receivingStats : (com.cloudera.ds.football.avro.StatSummary) defaultValue(fields()[3]);
        record.rushingStats = fieldSetFlags()[4] ? this.rushingStats : (com.cloudera.ds.football.avro.StatSummary) defaultValue(fields()[4]);
        record.totalStats = fieldSetFlags()[5] ? this.totalStats : (com.cloudera.ds.football.avro.StatSummary) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
