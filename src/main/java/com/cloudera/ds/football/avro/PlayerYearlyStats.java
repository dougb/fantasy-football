/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cloudera.ds.football.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PlayerYearlyStats extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PlayerYearlyStats\",\"namespace\":\"com.cloudera.ds.football.avro\",\"fields\":[{\"name\":\"playerId\",\"type\":\"string\"},{\"name\":\"statsByYear\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"StatsByYear\",\"fields\":[{\"name\":\"year\",\"type\":\"int\"},{\"name\":\"totalGamesPlayed\",\"type\":\"int\"},{\"name\":\"passingStats\",\"type\":{\"type\":\"record\",\"name\":\"StatSummary\",\"fields\":[{\"name\":\"mean\",\"type\":\"double\"},{\"name\":\"variance\",\"type\":\"double\"}]}},{\"name\":\"receivingStats\",\"type\":\"StatSummary\"},{\"name\":\"rushingStats\",\"type\":\"StatSummary\"},{\"name\":\"totalStats\",\"type\":\"StatSummary\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence playerId;
  @Deprecated public java.util.List<com.cloudera.ds.football.avro.StatsByYear> statsByYear;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public PlayerYearlyStats() {}

  /**
   * All-args constructor.
   */
  public PlayerYearlyStats(java.lang.CharSequence playerId, java.util.List<com.cloudera.ds.football.avro.StatsByYear> statsByYear) {
    this.playerId = playerId;
    this.statsByYear = statsByYear;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return playerId;
    case 1: return statsByYear;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: playerId = (java.lang.CharSequence)value$; break;
    case 1: statsByYear = (java.util.List<com.cloudera.ds.football.avro.StatsByYear>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'playerId' field.
   */
  public java.lang.CharSequence getPlayerId() {
    return playerId;
  }

  /**
   * Sets the value of the 'playerId' field.
   * @param value the value to set.
   */
  public void setPlayerId(java.lang.CharSequence value) {
    this.playerId = value;
  }

  /**
   * Gets the value of the 'statsByYear' field.
   */
  public java.util.List<com.cloudera.ds.football.avro.StatsByYear> getStatsByYear() {
    return statsByYear;
  }

  /**
   * Sets the value of the 'statsByYear' field.
   * @param value the value to set.
   */
  public void setStatsByYear(java.util.List<com.cloudera.ds.football.avro.StatsByYear> value) {
    this.statsByYear = value;
  }

  /** Creates a new PlayerYearlyStats RecordBuilder */
  public static com.cloudera.ds.football.avro.PlayerYearlyStats.Builder newBuilder() {
    return new com.cloudera.ds.football.avro.PlayerYearlyStats.Builder();
  }
  
  /** Creates a new PlayerYearlyStats RecordBuilder by copying an existing Builder */
  public static com.cloudera.ds.football.avro.PlayerYearlyStats.Builder newBuilder(com.cloudera.ds.football.avro.PlayerYearlyStats.Builder other) {
    return new com.cloudera.ds.football.avro.PlayerYearlyStats.Builder(other);
  }
  
  /** Creates a new PlayerYearlyStats RecordBuilder by copying an existing PlayerYearlyStats instance */
  public static com.cloudera.ds.football.avro.PlayerYearlyStats.Builder newBuilder(com.cloudera.ds.football.avro.PlayerYearlyStats other) {
    return new com.cloudera.ds.football.avro.PlayerYearlyStats.Builder(other);
  }
  
  /**
   * RecordBuilder for PlayerYearlyStats instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PlayerYearlyStats>
    implements org.apache.avro.data.RecordBuilder<PlayerYearlyStats> {

    private java.lang.CharSequence playerId;
    private java.util.List<com.cloudera.ds.football.avro.StatsByYear> statsByYear;

    /** Creates a new Builder */
    private Builder() {
      super(com.cloudera.ds.football.avro.PlayerYearlyStats.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.cloudera.ds.football.avro.PlayerYearlyStats.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.playerId)) {
        this.playerId = data().deepCopy(fields()[0].schema(), other.playerId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.statsByYear)) {
        this.statsByYear = data().deepCopy(fields()[1].schema(), other.statsByYear);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing PlayerYearlyStats instance */
    private Builder(com.cloudera.ds.football.avro.PlayerYearlyStats other) {
            super(com.cloudera.ds.football.avro.PlayerYearlyStats.SCHEMA$);
      if (isValidValue(fields()[0], other.playerId)) {
        this.playerId = data().deepCopy(fields()[0].schema(), other.playerId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.statsByYear)) {
        this.statsByYear = data().deepCopy(fields()[1].schema(), other.statsByYear);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'playerId' field */
    public java.lang.CharSequence getPlayerId() {
      return playerId;
    }
    
    /** Sets the value of the 'playerId' field */
    public com.cloudera.ds.football.avro.PlayerYearlyStats.Builder setPlayerId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.playerId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'playerId' field has been set */
    public boolean hasPlayerId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'playerId' field */
    public com.cloudera.ds.football.avro.PlayerYearlyStats.Builder clearPlayerId() {
      playerId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'statsByYear' field */
    public java.util.List<com.cloudera.ds.football.avro.StatsByYear> getStatsByYear() {
      return statsByYear;
    }
    
    /** Sets the value of the 'statsByYear' field */
    public com.cloudera.ds.football.avro.PlayerYearlyStats.Builder setStatsByYear(java.util.List<com.cloudera.ds.football.avro.StatsByYear> value) {
      validate(fields()[1], value);
      this.statsByYear = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'statsByYear' field has been set */
    public boolean hasStatsByYear() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'statsByYear' field */
    public com.cloudera.ds.football.avro.PlayerYearlyStats.Builder clearStatsByYear() {
      statsByYear = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public PlayerYearlyStats build() {
      try {
        PlayerYearlyStats record = new PlayerYearlyStats();
        record.playerId = fieldSetFlags()[0] ? this.playerId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.statsByYear = fieldSetFlags()[1] ? this.statsByYear : (java.util.List<com.cloudera.ds.football.avro.StatsByYear>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
